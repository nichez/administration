@model Itc.Am.Common.ViewModels.UserVm

@*<link href="~/css/edit.css" rel="stylesheet" />*@
<link href="~/css/AddAddress.css" rel="stylesheet" />

@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

<div class="main">

    <div class="main-center main-login">
        <div class="row">
            <h3>Add New User</h3>
        </div>

        @using (Html.BeginForm("AddUser", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*@Html.HiddenFor(model => model.UserId)*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-sm-2 control-label label" })
                    <div class="col-sm-12">
                        <div class="input-group col-sm-12">
                            @Html.TextBoxFor(m => m.Email, new { placeholder = "Email", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "col-sm-2 control-label label" })
                    <div class="col-sm-12">
                        <div class="input-group col-sm-12">
                            @Html.TextBoxFor(m => m.Username, new { placeholder = "Username", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-sm-2 control-label label" })
                    <div class="col-sm-12">
                        <div class="input-group col-sm-12">
                            @Html.TextBoxFor(m => m.FirstName, new { placeholder = "First Name", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-sm-2 control-label label" })
                    <div class="col-sm-12">
                        <div class="input-group col-sm-12">
                            @Html.TextBoxFor(m => m.LastName, new { placeholder = "Last Name", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-sm-2 control-label label" })
                    <div class="col-sm-12">
                        <div class="input-group col-sm-12">
                            @Html.PasswordFor(m => m.Password, new { placeholder = "Password", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "col-sm-2 control-label label" })
                    <div class="col-sm-12">
                        <div class="input-group col-sm-12">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { placeholder = "Confirm Password", @class = "form-control" })
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "label control-label col-sm-2" })
                    <br />
                    <div class="col-sm-12">
                        <div class="input-group">
                            @Html.DropDownListFor(m => m.RoleName, new List<SelectListItem>
                            {
                                new SelectListItem() {Text = "User", Value = "User"},
                                new SelectListItem() {Text = "Admin", Value = "Admin"}
                            })
                        </div>
                    </div>
                </div>

                <div>
                    <input id="signup" type="submit" value="Add User" />
                    <br/>
                    @*@Html.ActionLink("Back", "Admin")*@
                    <a href="../Account/Admin" style="color: white">Back</a>
                </div>

            </div>

            if (TempData["Success"] != null)
            {
                <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
            }
            

        }
    </div>
</div>